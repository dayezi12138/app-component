if (Boolean.valueOf(rootProject.ext.moduleShopMall)) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
    apply plugin: 'com.jakewharton.butterknife'

}
apply from: "${rootProject.rootDir}/config.gradle"
android {
    project.ext.setDefaultConfig project
    defaultConfig {
        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        if (Boolean.valueOf(rootProject.ext.moduleShopMall)) {
            flavorDimensions "versionCode"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    if (Boolean.valueOf(rootProject.ext.moduleShopMall)) {
        productFlavors {
            ydt {
                applicationId 'cn.zh.ytb'
                buildConfigField "String", "APP_URL", "\"http://120.26.41.167:8091/api\""
                resValue "string", "app_name", "易订通"
                manifestPlaceholders = [CHANNEL_VALUE: "ydt", app_icon: "@mipmap/logo"]
            }
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.jdkVersion
        targetCompatibility rootProject.ext.jdkVersion
    }
    /*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
 （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            if (rootProject.ext.moduleShopMall) {
                manifest.srcFile 'src/main/model/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation "com.android.support:appcompat-v7:$rootProject.ext.androidSupportSdkVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintVersion"
    implementation project(':core')
    implementation project(':toolbar-api')
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompilerVersion"
    annotationProcessor project(':toolbar-process')
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"
}